MERGE INTO vz-it-np-gudv-dev-dtwndo-0.aid_nwperf_aether_core_tbls.aether_upf_performance_derived_tbls tgt
USING (
WITH null_agg AS (
    SELECT trans_dt, event_time, fqdn, vendor, schedule_time,
      MAX(TO_JSON_STRING(labels)) AS labels,
      SAFE_CAST(SUM(
          CASE WHEN metric_name = 'sessions' 
               AND JSON_VALUE(labels, '$.group') = 'up-session' 
               THEN CAST(metric_sum_value AS FLOAT64) 
          ELSE NULL END) AS FLOAT64) AS sessions
    FROM vz-it-pr-gudv-dtwndo-0.aid_nwperf_aether_core_tbls_v.aether_upf_performance
    GROUP BY trans_dt, event_time, vendor, fqdn, schedule_time
),

not_null_agg AS (
    SELECT trans_dt, event_time, fqdn, vendor, schedule_time,
      TO_JSON_STRING(labels) AS labels,
      ROUND(SAFE_CAST(SUM(
          CASE WHEN metric_name = 'in_ipv4_bytes' 
               AND JSON_VALUE(labels, '$.group') = 'up-payload-ip-ni-if' 
               THEN CAST(metric_increase_value AS FLOAT64) 
          ELSE NULL END) AS FLOAT64), 4) AS increase_in_ipv4_bytes_by_access
    FROM vz-it-pr-gudv-dtwndo-0.aid_nwperf_aether_core_tbls_v.aether_upf_performance
    GROUP BY trans_dt, event_time, vendor, fqdn, labels, schedule_time
),

null_unnest AS (
    SELECT trans_dt, event_time, vendor, fqdn, schedule_time, metric.metric_name AS metric_name, 
           SUM(metric.metric_value) AS value, SAFE_CAST(NULL AS STRING) AS key_group
    FROM null_agg, UNNEST([STRUCT('sessions' AS metric_name, null_agg.sessions AS metric_value, NULL AS group_by_label)]) AS metric
    GROUP BY trans_dt, event_time, vendor, fqdn, metric_name, key_group, schedule_time
),

not_null_unnest AS (
    SELECT trans_dt, event_time, vendor, fqdn, schedule_time, metric.metric_name AS metric_name, 
           SUM(metric.metric_value) AS value, metric.group_by_label AS key_group 
    FROM not_null_agg,
      UNNEST ([ 
        STRUCT('increase_in_ipv4_bytes_by_access' AS metric_name, not_null_agg.increase_in_ipv4_bytes_by_access AS metric_value,
               TO_JSON_STRING(STRUCT('interface-network_instance' AS group_by_key_name,
                                     CONCAT(JSON_VALUE(labels, '$.interface'), '-', JSON_VALUE(labels, '$.network_instance'))) AS group_by_label)
        )]) AS metric
    GROUP BY trans_dt, event_time, vendor, fqdn, metric_name, key_group, schedule_time
),

grafana_expression_calc AS (
    SELECT * FROM null_unnest WHERE value IS NOT NULL
    UNION ALL
    SELECT * FROM not_null_unnest WHERE value IS NOT NULL
),

event_timestamps AS (
    SELECT DISTINCT event_time 
    FROM vz-it-pr-gudv-dtwndo-0.aid_nwperf_aether_core_tbls_v.aether_upf_performance
    WHERE DATETIME_TRUNC(TIMESTAMP(schedule_time), HOUR) 
          BETWEEN TIMESTAMP_SUB(DATETIME_TRUNC(TIMESTAMP('2025-02-08 14:35:00'), HOUR), INTERVAL 1 HOUR) 
              AND DATETIME_TRUNC(TIMESTAMP('2025-02-08 14:35:00'), HOUR)
          AND trans_dt = DATE(TIMESTAMP_SUB(TIMESTAMP('2025-02-08 14:35:00'), INTERVAL 1 HOUR))
),

fqdn_data AS (
    -- Mapping primary and secondary FQDNs
    SELECT DISTINCT
      CASE 
          WHEN fqdn LIKE '%ec-p%' OR fqdn LIKE '%consp%' OR fqdn LIKE '%entrp%' THEN fqdn
          ELSE NULL
      END AS primary_fqdn,
      CASE 
          WHEN fqdn LIKE '%ec-s%' OR fqdn LIKE '%conss%' OR fqdn LIKE '%entrs%' THEN fqdn
      END AS secondary_fqdn,
      b.site_name,
      b.region,
      b.longitude,
      b.latitude,
      b.Timezone,
      b.`Pair`
    FROM `vz-it-pr-gudv-dtwndo-0.aid_nwperf_aether_core_tbls_v.aether_smf_performance` a
    LEFT JOIN `vz-it-np-gudv-dev-dtwndo-0.aid_nwperf_aether_core_tbls.sap_site_mapping` b
      ON LOWER(SUBSTR(a.fqdn, 1, 8)) = LOWER(COALESCE(b.site_clli, b.`Pair`))
),

final_data AS (
    -- Map primary and secondary FQDNs correctly
    SELECT DISTINCT
      d1.primary_fqdn,
      d2.secondary_fqdn,
      d1.site_name,
      d1.region,
      d1.longitude,
      d1.latitude,
      d1.Timezone
    FROM fqdn_data d1
    LEFT JOIN fqdn_data d2
      ON LOWER(SUBSTR(d2.secondary_fqdn, 1, 8)) = LOWER(d1.`Pair`)
         AND SUBSTR(d2.secondary_fqdn, -9, 3) = SUBSTR(d1.primary_fqdn, -9, 3)
         AND SUBSTR(d2.secondary_fqdn, -3, 3) = SUBSTR(d1.primary_fqdn, -3, 3)
    WHERE d1.primary_fqdn IS NOT NULL
),

fqdn_classification AS (
    SELECT
        trans_dt,
        event_time,
        fqdn,
        vendor,
        metric_name,
        value,
        CASE 
            WHEN fqdn LIKE '%ec-p%' OR fqdn LIKE '%consp%' OR fqdn LIKE '%entrp%' THEN 'primary'
            WHEN fqdn LIKE '%ec-s%' OR fqdn LIKE '%conss%' OR fqdn LIKE '%entrs%' THEN 'secondary'
            ELSE NULL
        END AS fqdn_type,
        UPPER(SUBSTR(fqdn, 1, 8)) AS clli_base,
        SUBSTR(fqdn, LENGTH(fqdn) - 2, 3) AS deployment_number
    FROM grafana_expression_calc
    WHERE event_time IN (SELECT event_time FROM event_timestamps)
)

SELECT
    f.trans_dt,
    f.event_time,
    DATETIME(TIMESTAMP(f.event_time), pm.timezone) AS local_event_time,
    f.fqdn,
    f.vendor,
    f.metric_name,
    f.value,
    f.fqdn_type, 
    COALESCE(fd.primary_fqdn, f.fqdn) AS primary_fqdn,  
    pm.primary_clli,
    pm.secondary_clli AS device_clli,
    pm.site_name,
    pm.region,
    pm.latitude,
    pm.longitude,
    pm.area,
    pm.market,
    f.schedule_time,
    f.updated_timestamp
FROM fqdn_classification f
LEFT JOIN final_data fd 
    ON f.fqdn = fd.secondary_fqdn
LEFT JOIN fqdn_data pm
    ON LOWER(SUBSTR(f.fqdn, 1, 8)) = LOWER(COALESCE(pm.primary_fqdn, pm.secondary_fqdn))
) src
ON tgt.trans_dt = src.trans_dt
AND tgt.event_time = src.event_time
AND tgt.fqdn = src.fqdn
AND tgt.metric_name = src.metric_name
AND tgt.vendor = src.vendor
AND tgt.trans_dt IS NOT NULL

WHEN MATCHED THEN UPDATE SET
    tgt.local_event_time = src.local_event_time,
    tgt.value = src.value,
    tgt.fqdn_type = src.fqdn_type,
    tgt.primary_fqdn = src.primary_fqdn,
    tgt.primary_clli = src.primary_clli,
    tgt.device_clli = src.device_clli,
    tgt.site_name = src.site_name,
    tgt.region = src.region,
    tgt.latitude = src.latitude,
    tgt.longitude = src.longitude,
    tgt.area = src.area,
    tgt.market = src.market,
    tgt.schedule_time = src.schedule_time,
    tgt.updated_timestamp = src.updated_timestamp;
